// Generated by view binder compiler. Do not edit!
package com.example.petreminder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.petreminder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentRemindersBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout raEmptyStateLinearLayout;

  @NonNull
  public final TextView raEmptyStateTextView;

  @NonNull
  public final TextView raEmptyStateTitleTextView;

  @NonNull
  public final RecyclerView remindersRecyclerView;

  private ContentRemindersBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout raEmptyStateLinearLayout, @NonNull TextView raEmptyStateTextView,
      @NonNull TextView raEmptyStateTitleTextView, @NonNull RecyclerView remindersRecyclerView) {
    this.rootView = rootView;
    this.raEmptyStateLinearLayout = raEmptyStateLinearLayout;
    this.raEmptyStateTextView = raEmptyStateTextView;
    this.raEmptyStateTitleTextView = raEmptyStateTitleTextView;
    this.remindersRecyclerView = remindersRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentRemindersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentRemindersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_reminders, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentRemindersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ra_empty_state_linear_layout;
      LinearLayout raEmptyStateLinearLayout = rootView.findViewById(id);
      if (raEmptyStateLinearLayout == null) {
        break missingId;
      }

      id = R.id.ra_empty_state_text_view;
      TextView raEmptyStateTextView = rootView.findViewById(id);
      if (raEmptyStateTextView == null) {
        break missingId;
      }

      id = R.id.ra_empty_state_title_text_view;
      TextView raEmptyStateTitleTextView = rootView.findViewById(id);
      if (raEmptyStateTitleTextView == null) {
        break missingId;
      }

      id = R.id.reminders_recycler_view;
      RecyclerView remindersRecyclerView = rootView.findViewById(id);
      if (remindersRecyclerView == null) {
        break missingId;
      }

      return new ContentRemindersBinding((LinearLayout) rootView, raEmptyStateLinearLayout,
          raEmptyStateTextView, raEmptyStateTitleTextView, remindersRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
